Reverts following patch

    fix ptrace slowness

    This patch fixes bug #12208:

      Bug-Entry       : http://bugzilla.kernel.org/show_bug.cgi?id=12208
      Subject         : uml is very slow on 2.6.28 host

    This turned out to be not a scheduler regression, but an already
    existing problem in ptrace being triggered by subtle scheduler
    changes.

    The problem is this:

     - task A is ptracing task B
     - task B stops on a trace event
     - task A is woken up and preempts task B
     - task A calls ptrace on task B, which does ptrace_check_attach()
     - this calls wait_task_inactive(), which sees that task B is still on the runq
     - task A goes to sleep for a jiffy
     - ...

    Since UML does lots of the above sequences, those jiffies quickly add
    up to make it slow as hell.

    This patch solves this by not rescheduling in read_unlock() after
    ptrace_stop() has woken up the tracer.

    Thanks to Oleg Nesterov and Ingo Molnar for the feedback.

    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
    CC: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
